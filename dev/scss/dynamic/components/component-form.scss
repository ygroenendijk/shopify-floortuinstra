/**

Normal form elements should be marked up as follows:

<div class="field">
  <label class="field__label" for="example-1">
    Example 1
  </label>
  <input name="customer[password]" placeholder="Example 1" class="field__input" id="example-1">
</div>

Form elements with validation:
Native no js browser css state is used to check input states.
Set the field input element attribute to required and add icons in the example structure below.

capture icons
  echo '<div class="field__icons">'
  render 'global-icon', icon: 'checkmark', icon_class: 'w-5'
  render 'global-icon', icon: 'cross', icon_class: 'w-5'
  echo '</div>'
endcapture

<div class="field">
  <label class="field__label" for="example-1">
    Example 2
  </label>
  <input name="customer[password]" placeholder="Example 2" class="field__input" id="example-2" required>
  {{- icons -}}
  {%- if form.errors contains 'password' -%}
    <span id="RegisterForm-password-error" class="field__message field__message--error">
      {{ form.errors.translated_fields['password'] | capitalize }} {{ form.errors.messages['password'] }}.
    </span>
  {%- endif -%}
</div>

*/

@use '../../mixins' as *;

@layer h1-styles-components {
  .field {
    @apply relative
    mb-element-spacing
    w-full
    last:mb-0;

    // .field__label
    &__label,
    &__header {
      @apply mb-2
      block
      text-sm
      font-bold
      text-inherit;
      &[aria-hidden='true'] {
        @apply hidden;
      }
    }

    // .field__input, .field__select, .field__text-area
    &__input,
    &__select,
    &__textarea {
      @apply block
      w-full
      border-transparent
      bg-gray-50
      px-4
      py-2.5
      font-body
      text-sm
      leading-5
      text-black
      shadow-none
      ring-transparent
      transition-all
      duration-75
      ease-linear
      placeholder:text-black;
      &:focus {
        @apply border-primary-200
        bg-primary-100
        text-black
        shadow-none
        shadow-transparent
        ring-transparent;
      }
      &:focus-visible {
        @apply border-primary-100
        bg-primary-100
        text-black;
      }
      &:invalid:not(:placeholder-shown),
      &[aria-invalid='true']:invalid {
        @apply border-danger;
        ~ .field__icons .icon-cross {
          @apply block;
          [fill='currentColor'] {
            @apply fill-danger;
          }
        }
        ~ .field__message--error {
          @apply block;
        }
      }
      &:active(:not(:disabled)),
      &:focus(:not(:disabled)),
      &:focus-visible(:not(:disabled)) {
        @apply bg-primary-50;
      }
      &:valid[required],
      &:invalid:not(:placeholder-shown) {
        @apply pr-14; // preserve space for icons
      }
      &:valid[required] {
        ~ .field__icons .icon-checkmark {
          @apply block;
        }
        ~ .field__message {
          @apply hidden;
        }
      }
      &:disabled[required] {
        @apply cursor-default opacity-30;
        ~ .field__message,
        ~ .field__label {
          @apply opacity-30;
        }
      }
      ~ .field__icons .icon {
        @apply absolute
        right-3
        top-1/2
        hidden
        -translate-y-1/2;
      }
      &::-webkit-search-cancel-button {
        @apply hidden;
      }
    }

    // .field__textarea
    &__textarea {
      @apply h-20 resize-none;
    }

    // .field__message
    &__message {
      @apply mt-2
      block
      w-full
      flex-none
      text-sm;
      &--error {
        @apply hidden
        text-danger;
      }
    }

    // .field--checkbox
    &--checkbox {
      @apply flex
      gap-2;
    }

    // input .field__checkbox
    &__checkbox {
      @apply flex
      h-5
      w-5
      shrink-0
      cursor-pointer
      items-center
      justify-center
      border-none
      bg-gray-100
      text-black;
      svg {
        @apply opacity-0
        transition-opacity;
      }
    }
    input:focus-visible + .field__checkbox {
      @apply ring-2
      ring-primary-300;
    }
    input:checked + .field__checkbox {
      @apply cursor-default;
      svg {
        @apply opacity-100;
      }
    }
    input:disabled + .field__checkbox {
      @apply pointer-events-none;
      svg {
        @apply opacity-0;
      }
    }

    // .field__checkbox-label
    &__checkbox-label {
      @apply mb-0
      block
      cursor-pointer
      text-sm
      leading-5
      transition-colors
      text-color-default;
    }
    &:hover .field__checkbox-label {
      @apply text-primary;
    }
    input:disabled ~ .field__checkbox-label {
      @apply pointer-events-none
      cursor-default
      line-through
      opacity-50
      text-color-default;
    }

    // .field--radio
    &--radio {
      @apply flex
      gap-2;
    }

    // input label.field__radio
    &__radio {
      @apply flex
      h-5
      w-5
      shrink-0
      cursor-pointer
      items-center
      justify-center
      rounded-full
      border-none
      bg-gray-100;
      &:after {
        @apply h-2
        w-2
        rounded-full
        bg-black
        opacity-0
        transition-opacity
        content-[''];
      }
    }
    input:focus-visible + .field__radio {
      @apply ring-2
      ring-primary-300;
    }
    &:hover .field__radio,
    input:checked + .field__radio {
      @apply cursor-default;
      &:after {
        @apply opacity-100;
      }
    }
    input:disabled + .field__radio {
      @apply pointer-events-none;
      &:after {
        @apply opacity-0;
      }
    }

    // .field__radio-label
    &__radio-label {
      @apply mb-0
      block
      cursor-pointer
      text-sm
      leading-5
      transition-colors
      text-color-default;
    }
    &:hover .field__radio-label {
      @apply text-primary;
    }
    input:disabled ~ .field__radio-label {
      @apply pointer-events-none
      cursor-default
      line-through
      opacity-50
      text-color-default;
    }

    // .field__select
    &__select {
      @apply cursor-pointer;
    }

    // .field__select-icon
    &__select-icon {
      @apply pointer-events-none
      absolute
      right-5
      top-1/2
      origin-center
      -translate-y-1/2;
    }

    // .field__dropdown
    .field__dropdown {
      @apply pointer-events-none
      absolute
      left-0
      top-full
      z-10
      mt-1
      flex
      w-56
      origin-top-right
      flex-col
      border
      bg-white
      py-3
      opacity-0
      shadow-md
      transition-opacity
      border-color-default;
      &--active {
        @apply pointer-events-auto opacity-100;
      }
    }

    .field__dropdown-item {
      @apply px-3 text-sm text-black transition-colors hover:text-primary hover:no-underline;
    }

    // .field__text-area
    &__text-area {
      @apply h-40
      resize-none
      p-6;
      &--resize-vertical {
        @apply resize-y;
      }
    }

    // .field--switch
    &--switch {
      @apply relative
      inline-flex
      w-full
      cursor-pointer
      items-center
      gap-2;
    }

    // .field--switch-label
    &__switch {
      @apply relative
     h-5
     w-9
     rounded-full
     bg-gray-200;
      &:after {
        @apply absolute
        left-0.5
        top-0.5
        h-4
        w-4
        rounded-full
        border
      bg-white
        transition-all
        content-['']
        border-color-default;
      }
    }
    input:focus-visible + .field__switch {
      @apply ring-2
      ring-primary-300;
    }
    input:checked + .field__switch:after {
      @apply translate-x-full
      border-primary
      bg-primary;
    }
    input:disabled + .field__switch {
      @apply pointer-events-none;
    }

    &__switch-label {
      @apply mb-0
      block
      cursor-pointer
      text-sm
      leading-5
      transition-colors
      text-color-default;
    }
    &:hover .field__switch-label {
      @apply text-primary;
    }
    input:disabled ~ .field__switch-label {
      @apply pointer-events-none
      cursor-default
      line-through
      opacity-50
      text-color-default;
    }
  }

  .errors {
    @apply mb-4 text-sm;
  }
}
