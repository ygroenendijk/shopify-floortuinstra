{% # prettier-ignore %}

<script>
  window.routes = {
    cart_url: '{{ routes.cart_url }}',
    cart_add_url: '{{ routes.cart_add_url }}',
    cart_change_url: '{{ routes.cart_change_url }}',
    cart_update_url: '{{ routes.cart_update_url }}',
    predictive_search_url: '{{ routes.predictive_search_url | default: '/search/suggest' }}'
  };

  window.cartStrings = {
    error: `{% render "render-translation", namespace: "sections.cart.cart_error", fallback: "There was an error while updating your cart. Please try again." %}`,
    quantityError: `{% render "render-translation", namespace: "sections.cart.cart_quantity_error_html", fallback: "You can only add [quantity] of this item to your cart." %}`
  }

  window.variantStrings = {
    addToCart: `{% render "render-translation", namespace: "products.product.add_to_cart", fallback: "Add to cart" %}`,
    soldOut: `{% render "render-translation", namespace: "products.product.sold_out", fallback: "Sold out" %}`,
    unavailable: `{% render "render-translation", namespace: "products.product.unavailable", fallback: "Unavailable" %}`,
  }

  window.shop = {
    locale: '{{ shop.locale }}',
    moneyFormat: "{{ shop.money_format }}",
    moneyWithCurrencyFormat: "{{ shop.money_with_currency_format }}"
  }
</script>

{% comment %} Only load the js when there are product cards on the page {% endcomment %}
<script>
  (function() {
    const hasProductCards = document.querySelectorAll('.product-card').length > 0;
    const isProductPage = document.body.classList.contains('template-product');

    if (hasProductCards || isProductPage) {
      document.write('<script src="{{ 'variants.js' | asset_url }}" defer><\/script>');
      document.write('<script src="{{ 'product-form-component.js' | asset_url }}" defer><\/script>');
    }
    if (hasProductCards) {
      document.write('<script src="{{ 'quick-shop.js' | asset_url }}"  type="module"><\/script>');
    }
  })();
</script>