{%- comment -%}
  Main collection header
  Accepts:
  - section:         {Object} main-collection.liquid section object (required)
{%- endcomment -%}

{%- liquid
  # Capture collection image
  assign show_collection_image = false
  if collection.image != blank and section.settings.show_collection_image
    assign show_collection_image = true
    capture collection_image
      render 'responsive-image', image_object: collection.image
    endcapture
  endif
-%}

{%- capture collection_header_content -%}
  {% comment %} Collection header {% endcomment %}
  <div class="collection-header {{ section.settings.header_color_scheme }} overflow-hidden rounded-md md:flex md:items-center">

    {% comment %} Collection image {% endcomment %}
    {%- if show_collection_image -%}
      <div class="collection-header__image hidden h-full max-h-40 w-full max-w-[240px] grow-0 md:block aspect-[3/2]">
        {%- render 'responsive-image',
          image_object: collection.image,
          widths: '240',
          max_width: 240,
          aspect_ratio: '3/2',
          class: 'object-cover h-auto w-full'
        -%}
      </div>
    {%- endif -%}

    {% comment %} Title and Description {% endcomment %}
    <div class="flex flex-auto flex-col gap-4 py-4 {% if show_collection_image or section.settings.header_color_scheme != '' -%}px-8{%- endif -%}">

      {%- comment -%} Render collection title {%- endcomment -%}
      <h1 class="collection-header__title h4 mb-0">
        <span class="sr-only">
          {%- render "render-translation", namespace: "sections.collection_template", key: "title", fallback: "Collection:" -%}
          :
        </span>
        {{- collection.title -}}
      </h1>

      {%- comment -%} Collection description {%- endcomment -%}
      {%- if section.settings.show_collection_description and collection.description != blank -%}
        <div class="collection-header__description rte ms-0 me-auto md:w-full lg:w-3/4">
          {{- collection.description -}}
        </div>
      {%- endif -%}
    </div>
  </div>

  <div class="mt-10 flex flex-wrap items-center justify-center sm:justify-between gap-base {% if collection.products.size == 0 and is_filtered == false -%}!hidden{%- endif -%}">

    {% comment %} Collection display total {% endcomment %}
    {%- liquid
      paginate collection.products by settings.products_per_page
        assign total_for_first_pages = paginate.items | divided_by: settings.products_per_page | times: settings.products_per_page
        assign items_on_last_page = paginate.items | minus: total_for_first_pages
        if items_on_last_page == 0
          assign items_on_last_page = settings.products_per_page
        endif

        assign progress_end = settings.products_per_page
        if progress_end > paginate.items
          assign progress_end = paginate.items
        elsif paginate.pages == paginate.current_page
          assign progress_end = items_on_last_page
        endif

        assign current_html = progress_end | prepend: '<span data-progress-current>' | append: '</span>'
        assign total_html = paginate.items | prepend: '<span data-progress-total>' | append: '</span>'
      endpaginate
    -%}

    <p class="sm:order-3 m-0 sm:basis-full text-center md:order-none md:basis-auto" data-collection-totals-text>
      {{ 'sections.load_more.info_html' | t: current: current_html, total: total_html }}
    </p>

    {% comment %} Sort sorting {% endcomment %}
    {%- if section.settings.enable_sorting -%}
      <div class="collection-header__sorting relative flex justify-end gap-4">
        {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}

        {% comment %} Sort options {% endcomment %}
        <collection-filters-form class="collection-nav__sort sort-options">
          <form>
            <div class="field">
              <label class="field__label sr-only" for="sort-options">
                {%- render 'render-translation', namespace: "sections.collection_template", key: "sort_by_label", fallback: "Sort by" -%}
              </label>
              <div class="select group flex-auto">
                <select class="select__select border-2 border-solid border-black rounded-md bg-transparent group-states:bg-secondary group-states:text-secondary-text peer ellipsis" name="sort_by" id="sort-options">
                  {%- for option in collection.sort_options -%}
                    <option value="{{ option.value }}" {% if option.value == sort_by %}selected{% endif %}>{{- option.name -}}</option>
                  {%- endfor -%}
                </select>
                <span class="select__select-icon group-states:text-secondary-text">
                  {%- render 'icons', icon: 'chevron-down', icon_size: 'w-3' -%}
                </span>
              </div>
            </div>
          </form>
        </collection-filters-form>
      {%- endif -%}

      {% comment %} Collection filter button {% endcomment %}
      <class-toggle-component class="collection-header__filter-trigger min-w-max {% if settings.filter_display == 'grid' -%}lg:hidden{% elsif settings.filter_display == 'flex' -%}md:hidden{%- endif -%}"
        data-options='{
          "classToToggle": "filter-is-open"
        }'
      >
        <button
          type="button"
          class="button button--outline flex whitespace-nowrap py-2.5 px-2 sm:px-4 leading-none">
          {%- render 'icons', icon: 'filter', icon_class: 'w-6' -%}

          {%- comment -%} Text label {%- endcomment -%}
          <span>
            {%- render 'render-translation', namespace: 'sections.collection_template', key: 'filter', fallback: 'Filter' -%}
            {%- comment -%} Show active number of filters, loaded by js {%- endcomment -%}
            <span class="font-body font-normal text-xs" data-filter-total-active-options></span>
          </span>
        </button>
      </class-toggle-component>
    </div>
  </div>
{%- endcapture -%}

{%- comment -%} Output collection header with buttons and filters. {%- endcomment -%}
{%- render 'render-container-content', content: collection_header_content, class: 'my-6' -%}
